language: generic

matrix:
  include:
    - os: linux
      env:
        - PYTHON_VERSION=3.5
    - os: linux
      env:
        - PYTHON_VERSION=3.6
    - os: osx
      osx_image: xcode9.1
      sudo: false
      compiler:
        - clang
      env:
        - PYTHON_VERSION=3.5
    - os: osx
      osx_image: xcode9.1
      sudo: false
      compiler:
        - clang
      env:
        - PYTHON_VERSION=3.6

branches:
  only:
    - master

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      curl -o miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi

  # More conda setup to get miniconda in and a virtual env. setup
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a   # Useful for debugging any issues with conda
  # Create the env
  - conda create -q -n test python=$PYTHON_VERSION
  - source activate test
  - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"

install:
  # Install dependencies
  - conda config --add channels usgs-astrogeology
  - conda config --add channels conda-forge
  - conda install libgcc
  - conda install -c conda-forge numpy cython
  - conda install -c usgs-astrogeology libcsm
  # Development installation
  - conda install pytest pytest-cov
  - pip install coveralls

script:
  - echo $(gcc --version)
  - python setup.py install
  - pytest --cov=cycsm

after_success:
  - coveralls
  - source deactivate
  - conda install conda-build anaconda-client
  - conda config --set anaconda_upload yes
  - conda build -q --token $CONDA_UPLOAD_TOKEN --python $PYTHON_VERSION .
